---
import Link from "@components/ui/Link.astro";
import Text from "@components/ui/Text.astro";
import { getRole, getSiteLink } from "@integrations/astro-server";
import { getCompanyName, getResumeProps } from "@integrations/content";
import {
  getDocumentsBasePaths,
  getMyName,
  getPathsIf,
  getResumeDocuments,
} from "@integrations/docs";
import { i18n } from "@integrations/i18n-server";
import { removeWatashiNo } from "@integrations/l10n";
import { toTextList } from "@integrations/text";
import DocumentPage from "@layouts/document/DocumentPage.astro";

export const getStaticPaths = async (
  ...params: Parameters<typeof getDocumentsBasePaths>
) => {
  return getPathsIf("email", ...params);
};

const portfolioLink = await getSiteLink(Astro);
const myName = await getMyName(Astro);
const company = await getCompanyName(Astro);
const { resume, singleApplication, coverLetter } = await getResumeProps(Astro);
const { role } = await getRole(Astro);
const t = i18n(Astro);

const thanksSentence = removeWatashiNo(
  `${await t("Thank you very much for considering my application.")}${
    company
      ? `${await t(" ")}${await t("I look forward to the possibility of contributing to {}.", { interpolate: company })}`
      : ""
  }`
);

const documentsSentence = removeWatashiNo(
  await t(
    `I hope this message finds you well. I have attached my ${toTextList([...getResumeDocuments(Astro), ...(coverLetter ? ["cover letter"] : [])])} for your review. You may also view my portfolio at`
  )
);
---

<DocumentPage>
  <h1>Subject</h1>
  <p>
    <span>{myName.translatedShort}{await t(",")}{await t(" ")}</span>
    <Text tag="span"
      >application for {
        singleApplication && Array.isArray(resume)
          ? toTextList(resume.map(({ id }) => id))
          : role.id
      }</Text
    >
  </p>
  <Text tag="h1">Content</Text>
  <p>
    {
      company && (
        <>
          <Text tag="span" translateProps={{ interpolate: company }}>
            Dear {"{}"} team,
          </Text>
          <br />
        </>
      )
    }
    <span>{documentsSentence}</span>{await t(" ")}<Link href={portfolioLink} />{
      await t(".")
    }
  </p>
  <p>{thanksSentence}</p>
  <p>
    <Text tag="span">Best regards,</Text>
    <br />
    {myName.translatedShort}
  </p>
</DocumentPage>
