---
import Text from "@components/ui/Text.astro";
import DocumentPage from "@layouts/document/DocumentPage.astro";
import Link from "@components/ui/Link.astro";
import { ADDRESS, PHONE_NUMBER } from "astro:env/server";
import { capitalize, toTextList } from "@integrations/text";
import { getStaticPaths as getBasePaths } from "@pages/index.astro";
import { getSiteLink } from "@integrations/astro-server";
import { getSummary, getWorkFieldsSentence } from "@integrations/docs";
import { getTech } from "@components/TechList.astro";
import dayjs from "dayjs";
import duration from "dayjs/plugin/duration";
import relativeTime from "dayjs/plugin/relativeTime";
import { i18n, setLocale } from "@integrations/i18n-server";
import ResumeKnowHow from "@components/docs/ResumeKnowHow.astro";
import ResumePicture from "@components/docs/ResumePicture.astro";
import { mail } from "@components/Profile.astro";
import { getLanguages } from "@integrations/content";
import { groupBy } from "@integrations/array";

export const getStaticPaths = () => getBasePaths({ excludedLocales: ["ja"] });

const portfolioLink = await getSiteLink(Astro);
console.log(portfolioLink);

const workFieldsSentence = await getWorkFieldsSentence(Astro);

const tech = await getTech(Astro);

await setLocale(Astro);
dayjs.extend(duration);
dayjs.extend(relativeTime);

const t = i18n(Astro);
const address = ADDRESS ? await t(ADDRESS, { noCache: true }) : undefined;

const portfolioSentence = await t("Portfolio");
const relocateSentence = `${await t("(")}${await t("open to relocate")}${await t(")")}`;

const languages = groupBy(await getLanguages(Astro), ({ level }) => level);

const summary = await getSummary(Astro);

// TODO PHASE 2 UPDATE LINKEDIN AUTOMATICALLY
---

<DocumentPage>
  <ResumePicture />
  <Text tag="h1">Max Ludovico Hofer</Text>
  <Text>{summary}</Text>
  <span>
    <Text tag="span" format="branded" translateProps={{ disable: true }}
      >👜</Text
    >
    {portfolioSentence} 🡢 <Link href={portfolioLink} />
    <br />
    <Text tag="span" format="branded" translateProps={{ disable: true }}
      >📬</Text
    >
    <Link href={`mailto:${mail}`} />
  </span>
  {
    PHONE_NUMBER && (
      <>
        <br />
        <Text tag="span" format="branded" translateProps={{ disable: true }}>
          📞
        </Text>
        <Link href={`tel:${PHONE_NUMBER}`} />
      </>
    )
  }
  {
    ADDRESS && (
      <>
        <br />
        <Text tag="span" format="branded" translateProps={{ disable: true }}>
          📍
        </Text>
        <Link href={`https://maps.google.com/?q=${ADDRESS}`}>{address}</Link>{" "}
        {relocateSentence}
      </>
    )
  }
  <ResumeKnowHow />
  <Text tag="h2">Skills</Text>
  <ul class="grid grid-cols-3">
    {
      tech.map(async ({ data: { id, experience } }) => {
        const techItem = `${await t(id)} ${await t("(")}${dayjs.duration(experience).humanize().replace("a ", "1 ")}${await t(")")}`;

        return <li class="pr-7 my-0.5">{techItem}</li>;
      })
    }
  </ul>
  <ul class="-mt-3">
    <Text tag="li"
      >Made games for desktop, mobile, and online and local multiplayer. {
        workFieldsSentence
      }</Text
    >
    <Text tag="li"
      >{
        Object.entries(languages).map(
          async ([level, languages]) =>
            `${await t(capitalize(level))} ${await t("in")} ${await t(toTextList(languages.map(({ id }) => id)))}${await t(".")} `
        )
      }</Text
    >
  </ul>
  <Text tag="h3">Extra</Text>
  <ul>
    <Text tag="li"
      >Keeping up to date with the latest technology and research.</Text
    >
    <Text tag="li"
      >Passionate about cinema and arts, especially cyberpunk and cosmic horror.</Text
    >
    <Text tag="li"
      >Creating electronic music and worked as mixing and mastering engineer.</Text
    >
  </ul>
</DocumentPage>
