---
import { makeDocumentPaths } from "@document/DocumentPage.astro";
import {
  compactTechList,
  getDevelopmentTime,
  getRoles,
  getTeam,
  getTechList,
} from "@integrations/content";
import { setDayjsLocale } from "@integrations/i18n-server";
import PostFooter from "@post/PostFooter.astro";
import PostPage from "@post/PostPage.astro";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

export const getStaticPaths = makeDocumentPaths("projects");

const { tech, awards } = Astro.props.entry.data;

const team = getTeam(Astro.props.entry);

const roleList = await getRoles(Astro, Astro.props.entry);

const techList = compactTechList(
  await getTechList(Astro, undefined, {
    entries: tech,
    //? Include all used tech
    filter: undefined,
  })
).map(({ title }) => title);

await setDayjsLocale(Astro);
dayjs.extend(relativeTime);
const developmentDuration = getDevelopmentTime(Astro.props.entry)!.humanize();

// TODO PHASE 2 USE HREF ON PAGE BACK, BUT GET HREF DINAMICALLY
---

<PostPage titleProps={{ translateProps: { disable: true } }} {...Astro.props}
  ><Fragment slot="footer"
    ><PostFooter
      value={team.soloDeveloped
        ? `Solo developed in ${developmentDuration}`
        : `Made in ${developmentDuration} by a team of ${(team.internal ?? 0) + (team.external ?? 0)}`}
      >Development</PostFooter
    >{
      !team.soloDeveloped && (
        <>
          <br />
          <PostFooter value={roleList} translateProps={{ disable: true }}>
            Roles
          </PostFooter>
        </>
      )
    }
    <br />
    <PostFooter value={techList} translateProps={{ disable: true }}
      >Tech</PostFooter
    >{
      awards && awards.length !== 0 && (
        <>
          <br />
          <PostFooter value={awards}>Awards</PostFooter>
        </>
      )
    }</Fragment
  ></PostPage
>
