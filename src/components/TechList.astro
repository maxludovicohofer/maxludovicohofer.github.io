---
import { compactTechList, getTechList } from "@integrations/content";
import { i18n } from "@integrations/i18n-server";
import { capitalize } from "@integrations/text";
import Text from "@ui/Text.astro";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"ol"> {
  compact?: boolean;
}

const { class: className = "", compact, ...props } = Astro.props;

const techList = await getTechList(Astro);

const toExperienceText = async (experience: string) => {
  const t = i18n(Astro);

  return `${capitalize(experience)}${await t(" ")}${await t("of experience")}`;
};

// TODO PHASE 2 REFERENCE PROJECTS WHERE THE TECH IS USED. MOST LIKELY SHOW THEM ON HOVER/INTERSECT (MOBILE). COULD BE INDIVIDUAL PROJECTS OR JUST (USED IN 3 GAMES, 2 PROTOTYPES ...)
---

<ol class={`${className} grid`} {...props}>
  {
    (compact ? compactTechList(techList) : techList).map(
      async ({ title, experience, items }) => {
        const rowSpan = (items?.length ?? 0) / 3;

        const experienceText =
          experience && (await toExperienceText(experience));

        return (
          <li
            class={`${compact || rowSpan < 2 ? "" : rowSpan < 3 ? "row-span-2" : rowSpan < 4 ? "row-span-3" : rowSpan < 5 ? "row-span-4" : "row-span-5"}`}
          >
            <Text
              tag={compact ? undefined : "h3"}
              class="inline"
              translateProps={{ disable: true }}
            >
              {title}
            </Text>
            {!compact && (
              <>
                {experienceText && (
                  <Text subtitle tag="span" translateProps={{ disable: true }}>
                    {experienceText}
                  </Text>
                )}
                {items && items.length !== 0 && (
                  <ol class="ml-8">
                    {items.map(async ({ title, experience }) => {
                      const experienceText =
                        experience && (await toExperienceText(experience));

                      return (
                        <li>
                          <span>{title}</span>
                          {experienceText && (
                            <Text
                              subtitle
                              tag="span"
                              translateProps={{ disable: true }}
                            >
                              {experienceText}
                            </Text>
                          )}
                        </li>
                      );
                    })}
                  </ol>
                )}
              </>
            )}
          </li>
        );
      }
    )
  }
</ol>
