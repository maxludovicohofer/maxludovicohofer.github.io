---
import Text from "@components/ui/Text.astro";
import { getKnowHow } from "@integrations/content";
import { i18n, setDayjsLocale } from "@integrations/i18n-server";
import { getLocaleInfo } from "@integrations/i18n-special";
import { capitalize, endDelimiter } from "@integrations/text";
import type { AstroGlobal } from "astro";
import dayjs from "dayjs";
import duration from "dayjs/plugin/duration";

const knowHow = await getKnowHow(Astro);

await setDayjsLocale(Astro);
dayjs.extend(duration);

export const getFormattedDates = async (
  astro: AstroGlobal,
  start: dayjs.Dayjs,
  end?: dayjs.Dayjs
) => {
  await setDayjsLocale(astro);
  dayjs.extend(duration);

  const today = dayjs();
  const dates = [start, end ?? today] as const;

  const dropDayDate = today.subtract(
    dayjs.duration({ months: 1 }).asMilliseconds()
  );
  const showDay =
    dates[1].diff(dates[0], "month") < 1 ||
    dates.some((date) => date > dropDayDate);

  const dropMonthDate = today.subtract(
    dayjs.duration({ years: 5 }).asMilliseconds()
  );
  const showMonth =
    dates[1].diff(dates[0], "year") < 1 ||
    dates.some((date) => date > dropMonthDate);

  const { getYear, getYearMonth } = getLocaleInfo(astro);

  return dates.map((date) => {
    if (date === today) return "Present";

    if (showDay) return date.format("ll");

    if (showMonth) return getYearMonth(date.format("ll"));

    return getYear(date.format("LL"));
  });
};

const t = i18n(Astro);
---

{
  Object.entries(knowHow).map(([title, experiences]) => (
    <>
      <Text tag="h2">{capitalize(title)}</Text>
      <ol class="list-none ps-0">
        {experiences.map(
          async ({
            skill: { job, achievements },
            id,
            school,
            countAsExperience,
            start,
            end,
            translateId,
            dropOut,
          }) => {
            const translatedId = translateId
              ? await t(capitalize(id))
              : capitalize(id);
            const comma = `${await t(",")} `;
            const dates = await getFormattedDates(Astro, start, end);

            return (
              <li class="ps-0">
                <Text tag="h3">
                  {capitalize(job.id)}
                  {countAsExperience && school ? " (school)" : ""}
                  {dropOut ? " (not graduated)" : ""}
                </Text>
                <Text tag="h4" subtitle translateProps={{ disable: true }}>
                  {translatedId}
                  {comma}
                  {dates.join(" - ")}
                </Text>
                <ol class="list-disc">
                  {achievements.map((achievement) => (
                    <Text tag="li">
                      {capitalize(endDelimiter(achievement))}
                    </Text>
                  ))}
                </ol>
              </li>
            );
          }
        )}
      </ol>
    </>
  ))
}
