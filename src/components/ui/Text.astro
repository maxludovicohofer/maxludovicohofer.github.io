---
import {
  getTextClass,
  type TextFormat,
  type TextSize,
  type TextTag,
} from "@integrations/tailwind";
import type { ComponentProps, HTMLAttributes } from "astro/types";
import Translate from "./Translate.astro";

interface Props extends Omit<HTMLAttributes<TextTag>, "title"> {
  title?: boolean;
  subtitle?: boolean;
  markdown?: boolean;
  tag?: TextTag | undefined;
  importance?: TextSize | undefined;
  format?: TextFormat | undefined;
  translateProps?: ComponentProps<typeof Translate> | undefined;
}

const {
  class: className = "",
  title,
  subtitle,
  markdown,
  tag,
  importance,
  format,
  translateProps,
  ...props
} = Astro.props;

const Element = tag ?? (markdown ? "div" : title ? "h1" : "p");

if (markdown) import("katex/dist/katex.min.css");
---

<Element
  class={`${className} ${getTextClass(markdown ? "markdown" : (importance ?? (subtitle ? "small" : Element)), format ?? (title ? "heading" : subtitle ? "detail" : undefined))}`}
  {...props}
  translate="no"
  ><Translate disable={Element === "div"} {...translateProps}
    ><slot /></Translate
  ></Element
>
