---
import type { ComponentProps } from "astro/types";
import CardButton from "./CardButton.astro";
import SolidButton from "./SolidButton.astro";
import { formatUmamiEvent } from "./Link.astro";
import { getTextClass } from "@integrations/tailwind";

interface Props
  extends ComponentProps<typeof CardButton>,
    ComponentProps<typeof SolidButton> {
  cardButton?: boolean;
  inline?: boolean;
  importance?: Parameters<typeof getTextClass>[0] | undefined;
  format?: Parameters<typeof getTextClass>[1] | undefined;
}

const {
  cardButton,
  class: className = "",
  inline,
  importance,
  "data-umami-event": umamiEvent,
  format,
  ...props
} = Astro.props;

const buttonProps:
  | ComponentProps<typeof CardButton>
  | ComponentProps<typeof SolidButton> = {
  type: "button",
  class: `${className} cursor-pointer font-semibold duration-150 hover:shadow-lg active:shadow ${inline ? "" : "w-full"} ${getTextClass(importance ?? "button", format ?? "none")}`,
  ...(umamiEvent
    ? { "data-umami-event": await formatUmamiEvent(Astro, umamiEvent) }
    : {}),
  ...props,
};
---

{
  cardButton ? (
    <CardButton {...buttonProps}>
      <slot />
    </CardButton>
  ) : (
    <SolidButton {...buttonProps}>
      <slot />
    </SolidButton>
  )
}
