---
import Button from "./Button.astro";
import type { ComponentProps } from "astro/types";
import Text from "./Text.astro";
import { addBaseToLink } from "@integrations/astro-server";

interface Props extends ComponentProps<typeof Button> {
  buttonName?: string;
}

//? Always add href to allow prefetch
const { class: className = "", buttonName, href, ...buttonProps } = Astro.props;

// TODO PHASE 2 ADD A HOME BUTTON WHEN BACK BUTTON DOESN'T RETURN TO HOME
---

<Button
  rounded
  class={`${buttonName ?? (href ? "back-link" : "back-button")} ${className} fixed left-6 top-[calc(100dvh-5rem)] lg:top-12 !size-14 lg:!size-[2.8rem] hover:scale-110 active:scale-75`}
  href={href}
  translateProps={{ disable: true }}
  data-base={await addBaseToLink(Astro)}
  {...buttonProps}
>
  <Text
    importance="button-icon"
    class="mt-[-0.2rem] ml-[-0.1rem] lg:ml-[-0.2rem]"
    translateProps={{ disable: true }}>â—‚</Text
  >
</Button>
<script>
  import { saveScrollPosition } from "@integrations/astro";

  // Executed once to correct back, when not starting from homepage
  const backButton =
    document.querySelector<HTMLButtonElement>("button.back-button");

  if (backButton) {
    const startLocation = location.pathname;
    const startState = history.state;

    history.replaceState(
      { scrollX: 0, scrollY: 0 },
      "",
      backButton.dataset.base
    );

    history.pushState(startState, "", startLocation);
  }

  const back = () => {
    saveScrollPosition();

    history.back();
  };

  document.addEventListener("astro:page-load", () =>
    document
      .querySelectorAll<HTMLButtonElement>("button.back-button")
      .forEach((button) => button.addEventListener("click", back))
  );

  document.addEventListener("astro:before-preparation", () =>
    document
      .querySelectorAll<HTMLButtonElement>("button.back-button")
      .forEach((button) => button.removeEventListener("click", back))
  );
</script>
