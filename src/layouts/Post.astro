---
import Text from "@layouts/Text.astro";
import type { CollectionEntry } from "astro:content";
import type { ImageMetadata } from "astro";
import Button from "./Button.astro";
import { Image } from "astro:assets";

interface Props {
  content?: CollectionEntry<"thoughts"> | CollectionEntry<"projects">;
  readMore?: string;
  importance?: 1 | 2 | 3;
  divTag?: boolean;
}

const { importance = 2, content, readMore, divTag } = Astro.props;

const { Content, remarkPluginFrontmatter } = content
  ? await content.render()
  : { Content: undefined };

// It is assumed that a person reads for approximately 1 minute before clicking read more
const minutesAlreadySpentReading = 1;

const minutesToRead = remarkPluginFrontmatter
  ? Math.max(
      Math.round(remarkPluginFrontmatter.minutesRead) -
        minutesAlreadySpentReading,
      1
    )
  : 0;

// Load project related info
const project = content?.collection == "projects" ? content : undefined;

const imageFolder = "/src/images/projects/";
const images =
  project &&
  import.meta.glob<{ default: ImageMetadata }>(
    "/src/images/projects/*.{jpeg,jpg,png,gif}"
  );
const imagePath = images && `${imageFolder}${project.slug}.png`;

if (images && !images[imagePath!]) {
  throw new Error(
    `"${imagePath}" does not exist in pattern: "${imageFolder}*.{jpeg,jpg,png,gif}"`
  );
}

// Evaluate classes
const titleClass =
  importance == 1
    ? "text-3xl lg:text-xl 2xl:text-3xl"
    : importance == 2
      ? "text-3xl 2xl:text-5xl"
      : "text-3xl lg:text-5xl 2xl:text-8xl";

const hasReadMore = Content || readMore;

const contentClass = `mt-6 text-xl 2xl:text-3xl ${hasReadMore ? "max-h-96" : ""}`;
---

{
  Astro.slots.has("header") && (
    <Text subtitle className="mb-6 leading-6" divTag>
      <slot name="header" />
    </Text>
  )
}
<Text title className={titleClass}
  >{content?.data.title ?? <slot name="title" />}</Text
>
<Text className={contentClass} markdown={!!Content} divTag={divTag}
  >{Content ? <Content /> : <slot />}</Text
>
{
  hasReadMore && (
    <Button readMore className="absolute bottom-0 -mx-8">
      {Content ? `Read in ${minutesToRead} min` : "Read more"}
      <br />â–¼
    </Button>
  )
}
{
  images && (
    <Image
      src={images[imagePath!]!()}
      class="absolute inset-0 -z-10 size-full object-cover opacity-0 group-hover:opacity-15 intersect:opacity-15 lg:intersect:opacity-0 intersect-half duration-700"
      alt={project.data.description}
    />
  )
}
