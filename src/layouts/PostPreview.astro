---
import Text from "@layouts/Text.astro";
import type { CollectionEntry } from "astro:content";
import Button from "./Button.astro";
import { Image } from "astro:assets";
import { getLastModifiedTime, getPostImage } from "./Post.astro";
import type { ComponentProps } from "astro/types";

interface Props {
  content?:
    | CollectionEntry<"thoughts">
    | CollectionEntry<"projects">
    | undefined;
  readMore?: string;
  importance?: 1 | 2 | 3 | undefined;
  tag?: ComponentProps<typeof Text>["tag"];
  hideDate?: boolean;
  container?: boolean;
}

const {
  importance = 2,
  content,
  readMore,
  tag,
  hideDate,
  container,
} = Astro.props;

const { Content, remarkPluginFrontmatter } = content
  ? await content.render()
  : {};

// Time assumed to be already spent reading before clicking read more
const minutesAlreadySpentReading = 0.5;

const realMinutesToRead =
  remarkPluginFrontmatter &&
  remarkPluginFrontmatter.minutesRead - minutesAlreadySpentReading;

const minutesToRead =
  realMinutesToRead !== undefined && Math.max(Math.round(realMinutesToRead), 1);

const readMoreLink =
  realMinutesToRead && realMinutesToRead < 0
    ? undefined
    : (readMore ?? (content && `${content.collection}/${content.slug}`));

const lastModifiedTime =
  !hideDate &&
  getLastModifiedTime(remarkPluginFrontmatter)?.format("D MMMM YYYY");

const image = getPostImage(content);
---

{
  Astro.slots.has("header") && (
    <Text subtitle className="mb-6" tag="div">
      <slot name="header" />
    </Text>
  )
}
<Text
  title
  className={importance === 1
    ? "text-3xl lg:text-xl 2xl:text-3xl"
    : importance === 2
      ? "text-3xl 2xl:text-5xl"
      : "text-3xl lg:text-5xl 2xl:text-8xl"}
  >{content?.data.title ?? <slot name="title" />}</Text
>
{
  lastModifiedTime && (
    <Text subtitle className="mt-0.5 xl:mt-3">
      {lastModifiedTime}
    </Text>
  )
}
<Text
  className={`${lastModifiedTime ? "mt-4" : Content || Astro.slots.has("title") ? "mt-6" : ""} text-xl 2xl:text-3xl ${container ? "max-h-[25rem]" : readMoreLink ? "max-h-72" : ""}`}
  markdown={!!Content}
  tag={tag ?? (container ? "div" : undefined)}
  >{Content ? <Content /> : <slot />}</Text
>
{
  readMoreLink && (
    <Button
      readMore
      className="absolute bottom-0 left-0"
      href={readMoreLink}
      navigate
      container={container}
    >
      {minutesToRead ? `Read in ${minutesToRead} min` : "Read more"}
      <br />â–¼
    </Button>
  )
}
{
  image && (
    <Image
      src={image()}
      class={`absolute inset-0 size-full object-cover opacity-0 ${container ? "group-hover/container-card:opacity-15" : "group-hover/card:opacity-15"} intersect:opacity-15 lg:intersect:opacity-0 intersect-half duration-700 pointer-events-none`}
      alt={
        content?.collection === "projects"
          ? content.data.description
          : `Graphic explanation of "${content!.data.title}"`
      }
    />
  )
}
