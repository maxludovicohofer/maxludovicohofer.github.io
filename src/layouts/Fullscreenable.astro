---
import Button from "./Button.astro";

interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<Button
  noFocus
  noRounding
  fullHeight
  className={`can-fullscreen ${className} flex items-center justify-center overflow-hidden !bg-transparent`}
>
  <slot />
</Button>
<script>
  const activateModal = (content: Node) => {
    const modalSlot = document.querySelector<HTMLDivElement>("div.modal-slot")!;

    modalSlot.className = `${modalSlot.className} !pointer-events-auto`;

    const backdrop = modalSlot.firstElementChild!;
    backdrop.className = `${backdrop.className} !opacity-100`;

    const backButton = modalSlot.lastElementChild!;
    backButton.className = `${backButton.className} !opacity-100`;

    const modal = backButton.previousElementSibling!.firstElementChild!;
    modal.append(content);
  };

  document.addEventListener("astro:page-load", () =>
    document
      .querySelectorAll<HTMLButtonElement>("button.can-fullscreen")
      ?.forEach((fullImage) =>
        fullImage.addEventListener("click", () => {
          const fullscreenMedia = fullImage
            .querySelector("img, iframe, video")!
            .cloneNode(true) as
            | HTMLImageElement
            | HTMLVideoElement
            | HTMLIFrameElement;

          // const aspectRatio =
          // fullscreenMedia.clientWidth / fullscreenMedia.clientHeight;

          // console.log(
          //   fullscreenMedia.clientWidth / fullscreenMedia.clientHeight
          // );

          const cleanClass = (className: string) =>
            className.replace(
              /(^|\s)(\S*-)*(size-|w-|h-|pointer-events-|object-)\S*/g,
              ""
            );

          fullscreenMedia.className = `${cleanClass(fullscreenMedia.className)} pointer-events-auto max-h-[90vh] lg:max-h-[80vh] max-w-[90vw] lg:max-w-[80vw] rounded-3xl`;

          activateModal(fullscreenMedia);

          // const screenAspectRatio = screen.width / screen.height;

          // if (screenAspectRatio > aspectRatio) {
          //   fullscreenMedia.height = screen.height;
          //   fullscreenMedia.width =
          //     Number(fullscreenMedia.clientHeight) / aspectRatio;
          // } else {
          //   fullscreenMedia.width = screen.width;
          //   fullscreenMedia.height =
          //     Number(fullscreenMedia.clientWidth) / aspectRatio;
          // }
        })
      )
  );
</script>
