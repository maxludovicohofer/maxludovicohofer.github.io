---
import BackButton from "@ui/BackButton.astro";

// TODO PHASE 2 USE DIALOG INSTEAD OF DIV (SHOULD FIX IOS SAFARI GYROSCOPE WITH POINTEREVENTS)
---

<div class="modal-slot pointer-events-none fixed inset-0">
  <div
    class="modal-back size-full bg-white/85 opacity-0 duration-700 dark:bg-black/85"
  >
  </div>
  <div
    class="pointer-events-none absolute inset-0 flex flex-col items-center justify-center"
  >
    <div
      class="modal flex max-h-[90dvh] max-w-[90dvw] flex-col items-center justify-center overflow-hidden rounded-3xl lg:max-h-[80dvh] lg:max-w-[80dvw]"
    >
    </div>
    <style>
      .modal {
        /* Used for 3D perspective */
        transform: perspective(5000px) rotateY(var(--rotateX))
          rotateX(var(--rotateY));
      }
    </style>
  </div>
  <BackButton buttonName="modal-back" class="opacity-0" />
</div>
<script>
  import { deactivateModal } from "@integrations/html";
  import type { LiteYTEmbed } from "lite-youtube-embed";

  const closeModal = async () => {
    deactivateModal();

    // Restart paused video
    const originalMedia = document.querySelector<LiteYTEmbed>(
      "lite-youtube[data-modal-original]",
    );

    if (!originalMedia) return;

    originalMedia.removeAttribute("data-modal-original");
    const originalPlayer = (await originalMedia.getYTPlayer())!;
    originalPlayer.playVideo();
  };

  document.addEventListener("astro:page-load", () =>
    document
      .querySelectorAll<HTMLElement>(".modal-back")
      .forEach((element) => element.addEventListener("click", closeModal)),
  );

  document.addEventListener("astro:before-swap", () =>
    document
      .querySelectorAll<HTMLElement>(".modal-back")
      .forEach((element) => element.removeEventListener("click", closeModal)),
  );
</script>
